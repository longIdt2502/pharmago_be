// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: company_pharma.sql

package db

import (
	"context"
	"database/sql"
)

const createCompanyPharma = `-- name: CreateCompanyPharma :one
INSERT INTO company_pharma (
    name, code, country, address, company_pharma_type
) VALUES (
    $1::varchar, $2::varchar, $3::varchar, $4::varchar,
    $5::varchar
) RETURNING id, name, code, country, address, company_pharma_type, created_at
`

type CreateCompanyPharmaParams struct {
	Name              string         `json:"name"`
	Code              sql.NullString `json:"code"`
	Country           sql.NullString `json:"country"`
	Address           sql.NullString `json:"address"`
	CompanyPharmaType string         `json:"company_pharma_type"`
}

func (q *Queries) CreateCompanyPharma(ctx context.Context, arg CreateCompanyPharmaParams) (CompanyPharma, error) {
	row := q.db.QueryRowContext(ctx, createCompanyPharma,
		arg.Name,
		arg.Code,
		arg.Country,
		arg.Address,
		arg.CompanyPharmaType,
	)
	var i CompanyPharma
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Code,
		&i.Country,
		&i.Address,
		&i.CompanyPharmaType,
		&i.CreatedAt,
	)
	return i, err
}
