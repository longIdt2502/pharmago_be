// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: product_bank.sql

package db

import (
	"context"
	"database/sql"
)

const createProductBank = `-- name: CreateProductBank :one
INSERT INTO products_bank (
    name, code, "taDuoc", "nongDo", "lieuDung", "chiDinh", "chongChiDinh", "congDung", "tacDungPhu", "thanTrong", "tuongTac", "baoQuan",
    "dongGoi", "phanLoai", "dangBaoche", "tieuChuanSx", "congTySx", "congTyDk"
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18
) RETURNING id, name, code, "taDuoc", "nongDo", "lieuDung", "chiDinh", "chongChiDinh", "congDung", "tacDungPhu", "thanTrong", "tuongTac", "baoQuan", "dongGoi", "phanLoai", "dangBaoche", "tieuChuanSx", "congTySx", "congTyDk"
`

type CreateProductBankParams struct {
	Name         string         `json:"name"`
	Code         string         `json:"code"`
	TaDuoc       sql.NullString `json:"taDuoc"`
	NongDo       sql.NullString `json:"nongDo"`
	LieuDung     string         `json:"lieuDung"`
	ChiDinh      string         `json:"chiDinh"`
	ChongChiDinh sql.NullString `json:"chongChiDinh"`
	CongDung     string         `json:"congDung"`
	TacDungPhu   string         `json:"tacDungPhu"`
	ThanTrong    string         `json:"thanTrong"`
	TuongTac     sql.NullString `json:"tuongTac"`
	BaoQuan      string         `json:"baoQuan"`
	DongGoi      string         `json:"dongGoi"`
	PhanLoai     sql.NullString `json:"phanLoai"`
	DangBaoche   string         `json:"dangBaoche"`
	TieuChuanSx  string         `json:"tieuChuanSx"`
	CongTySx     int64          `json:"congTySx"`
	CongTyDk     int64          `json:"congTyDk"`
}

func (q *Queries) CreateProductBank(ctx context.Context, arg CreateProductBankParams) (ProductsBank, error) {
	row := q.db.QueryRowContext(ctx, createProductBank,
		arg.Name,
		arg.Code,
		arg.TaDuoc,
		arg.NongDo,
		arg.LieuDung,
		arg.ChiDinh,
		arg.ChongChiDinh,
		arg.CongDung,
		arg.TacDungPhu,
		arg.ThanTrong,
		arg.TuongTac,
		arg.BaoQuan,
		arg.DongGoi,
		arg.PhanLoai,
		arg.DangBaoche,
		arg.TieuChuanSx,
		arg.CongTySx,
		arg.CongTyDk,
	)
	var i ProductsBank
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Code,
		&i.TaDuoc,
		&i.NongDo,
		&i.LieuDung,
		&i.ChiDinh,
		&i.ChongChiDinh,
		&i.CongDung,
		&i.TacDungPhu,
		&i.ThanTrong,
		&i.TuongTac,
		&i.BaoQuan,
		&i.DongGoi,
		&i.PhanLoai,
		&i.DangBaoche,
		&i.TieuChuanSx,
		&i.CongTySx,
		&i.CongTyDk,
	)
	return i, err
}
