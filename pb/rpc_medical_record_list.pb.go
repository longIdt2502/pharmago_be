// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: rpc/customer/rpc_medical_record_list.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MedicalRecordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company             *int32             `protobuf:"varint,1,opt,name=company,proto3,oneof" json:"company,omitempty"`
	Customer            *int32             `protobuf:"varint,2,opt,name=customer,proto3,oneof" json:"customer,omitempty"`
	AppointmentSchedule *string            `protobuf:"bytes,3,opt,name=appointment_schedule,json=appointmentSchedule,proto3,oneof" json:"appointment_schedule,omitempty"`
	Type                *MedicalRecordType `protobuf:"varint,4,opt,name=type,proto3,enum=pb.MedicalRecordType,oneof" json:"type,omitempty"`
	MedicalBill         *string            `protobuf:"bytes,5,opt,name=medical_bill,json=medicalBill,proto3,oneof" json:"medical_bill,omitempty"`
}

func (x *MedicalRecordListRequest) Reset() {
	*x = MedicalRecordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_customer_rpc_medical_record_list_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedicalRecordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalRecordListRequest) ProtoMessage() {}

func (x *MedicalRecordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_customer_rpc_medical_record_list_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalRecordListRequest.ProtoReflect.Descriptor instead.
func (*MedicalRecordListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_customer_rpc_medical_record_list_proto_rawDescGZIP(), []int{0}
}

func (x *MedicalRecordListRequest) GetCompany() int32 {
	if x != nil && x.Company != nil {
		return *x.Company
	}
	return 0
}

func (x *MedicalRecordListRequest) GetCustomer() int32 {
	if x != nil && x.Customer != nil {
		return *x.Customer
	}
	return 0
}

func (x *MedicalRecordListRequest) GetAppointmentSchedule() string {
	if x != nil && x.AppointmentSchedule != nil {
		return *x.AppointmentSchedule
	}
	return ""
}

func (x *MedicalRecordListRequest) GetType() MedicalRecordType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MedicalRecordType_test
}

func (x *MedicalRecordListRequest) GetMedicalBill() string {
	if x != nil && x.MedicalBill != nil {
		return *x.MedicalBill
	}
	return ""
}

type MedicalRecordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageTrans string               `protobuf:"bytes,3,opt,name=message_trans,json=messageTrans,proto3" json:"message_trans,omitempty"`
	Log          string               `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	Details      []*MedicalRecordLink `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *MedicalRecordListResponse) Reset() {
	*x = MedicalRecordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_customer_rpc_medical_record_list_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedicalRecordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalRecordListResponse) ProtoMessage() {}

func (x *MedicalRecordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_customer_rpc_medical_record_list_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalRecordListResponse.ProtoReflect.Descriptor instead.
func (*MedicalRecordListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_customer_rpc_medical_record_list_proto_rawDescGZIP(), []int{1}
}

func (x *MedicalRecordListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MedicalRecordListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MedicalRecordListResponse) GetMessageTrans() string {
	if x != nil {
		return x.MessageTrans
	}
	return ""
}

func (x *MedicalRecordListResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *MedicalRecordListResponse) GetDetails() []*MedicalRecordLink {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_rpc_customer_rpc_medical_record_list_proto protoreflect.FileDescriptor

var file_rpc_customer_rpc_medical_record_list_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x72,
	0x70, 0x63, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x17, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03, 0x0a, 0x18, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x86,
	0x01, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x56, 0x92, 0x41, 0x53, 0x32, 0x51, 0x74, 0x65, 0x73, 0x74, 0x3a,
	0x20, 0x4b, 0xe1, 0xba, 0xbf, 0x74, 0x20, 0x71, 0x75, 0xe1, 0xba, 0xa3, 0x20, 0x78, 0xc3, 0xa9,
	0x74, 0x20, 0x6e, 0x67, 0x68, 0x69, 0xe1, 0xbb, 0x87, 0x6d, 0x2c, 0x20, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x3a, 0x20, 0x62, 0xe1, 0xbb, 0x87, 0x6e, 0x68, 0x20, 0xc3, 0xa1, 0x6e, 0x2c,
	0x20, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x3a, 0x20, 0x63, 0x68, 0x75,
	0xe1, 0xba, 0xa9, 0x6e, 0x20, 0xc4, 0x91, 0x6f, 0xc3, 0xa1, 0x6e, 0x2e, 0x48, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x69, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x22, 0xb1, 0x01, 0x0a, 0x19,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x2f,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42,
	0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x48, 0x6f,
	0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x32, 0x35, 0x30, 0x32, 0x2f, 0x70, 0x68, 0x61, 0x72,
	0x6d, 0x61, 0x67, 0x6f, 0x5f, 0x62, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rpc_customer_rpc_medical_record_list_proto_rawDescOnce sync.Once
	file_rpc_customer_rpc_medical_record_list_proto_rawDescData = file_rpc_customer_rpc_medical_record_list_proto_rawDesc
)

func file_rpc_customer_rpc_medical_record_list_proto_rawDescGZIP() []byte {
	file_rpc_customer_rpc_medical_record_list_proto_rawDescOnce.Do(func() {
		file_rpc_customer_rpc_medical_record_list_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_customer_rpc_medical_record_list_proto_rawDescData)
	})
	return file_rpc_customer_rpc_medical_record_list_proto_rawDescData
}

var file_rpc_customer_rpc_medical_record_list_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_customer_rpc_medical_record_list_proto_goTypes = []interface{}{
	(*MedicalRecordListRequest)(nil),  // 0: pb.MedicalRecordListRequest
	(*MedicalRecordListResponse)(nil), // 1: pb.MedicalRecordListResponse
	(MedicalRecordType)(0),            // 2: pb.MedicalRecordType
	(*MedicalRecordLink)(nil),         // 3: pb.MedicalRecordLink
}
var file_rpc_customer_rpc_medical_record_list_proto_depIdxs = []int32{
	2, // 0: pb.MedicalRecordListRequest.type:type_name -> pb.MedicalRecordType
	3, // 1: pb.MedicalRecordListResponse.details:type_name -> pb.MedicalRecordLink
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_customer_rpc_medical_record_list_proto_init() }
func file_rpc_customer_rpc_medical_record_list_proto_init() {
	if File_rpc_customer_rpc_medical_record_list_proto != nil {
		return
	}
	file_entities_customer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_customer_rpc_medical_record_list_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedicalRecordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_customer_rpc_medical_record_list_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedicalRecordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_customer_rpc_medical_record_list_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_customer_rpc_medical_record_list_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_customer_rpc_medical_record_list_proto_goTypes,
		DependencyIndexes: file_rpc_customer_rpc_medical_record_list_proto_depIdxs,
		MessageInfos:      file_rpc_customer_rpc_medical_record_list_proto_msgTypes,
	}.Build()
	File_rpc_customer_rpc_medical_record_list_proto = out.File
	file_rpc_customer_rpc_medical_record_list_proto_rawDesc = nil
	file_rpc_customer_rpc_medical_record_list_proto_goTypes = nil
	file_rpc_customer_rpc_medical_record_list_proto_depIdxs = nil
}
